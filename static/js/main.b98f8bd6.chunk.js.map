{"version":3,"sources":["stores/Types.ts","stores/OMDbStore.ts","inversify.config.ts","stores/Constants.ts","components/Header.tsx","components/Footer.tsx","components/SearchBar.tsx","components/Spacer.tsx","components/Modal.tsx","components/Home.tsx","App.tsx","index.tsx","resources/search.svg","resources/cinema.png","resources/trophy.png"],"names":["TYPES","OMDbStore","Symbol","injectable","movieData","results","rawMovie","push","title","Title","release_year","Year","poster_url","Poster","id","imdbID","this","searchResults","movie","nominations","length","console","log","updateCache","movieToRemove","filter","localStorage","setItem","map","JSON","stringify","toString","observable","action","query","page","a","trim","error","queryString","pageString","axios","require","default","get","rawData","data","Response","Error","Search","parseAndSetMovieData","container","Container","bind","to","inSingletonScope","Colors","green","navy","white","Dimensions","headerHeight","footerHeight","HeaderContainer","styled","div","Header","FooterContainer","Footer","href","SearchIcon","img","SearchField","input","SearchBar","observer","debouncedOnInput","debounce","onInput","src","search","className","placeholder","type","onChange","event","target","value","React","omdbStore","searchMovies","props","width","height","Spacer","children","ModalContainer","Button","Modal","onClick","Row","InnerContainer","ResultsContainer","PlaceholderContainer","SearchResultContainer","SearchResultTextContainer","NominateButton","isNomination","NominationsContainer","Home","toggleNomination","nomination","removeNomination","includes","addNomination","showNominationCompleteModal","renderSearchResults","renderSearchResult","buttonText","key","renderNominations","showModal","hideNominationCompleteModal","showingSearchResults","cinema","alt","hasNominations","trophy","computed","AppContainer","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mSAIeA,EAJD,CACVC,UAAWC,OAAO,c,yCCKTD,EADZE,sBACD,0QA4CiCC,GACzB,IADkD,EAC5CC,EAAoB,GADwB,cAE3BD,GAF2B,IAElD,2BAAkC,CAAC,IAAxBE,EAAuB,QAC9BD,EAAQE,KAAK,CACTC,MAAOF,EAASG,MAChBC,aAAcJ,EAASK,KACvBC,WAAYN,EAASO,OACrBC,GAAIR,EAASS,UAP6B,8BAUlDC,KAAKC,cAAgBZ,IAtD7B,oCA0DkBa,GACNF,KAAKG,YAAYC,QAAU,EAC3BC,QAAQC,IAAI,SAEZN,KAAKG,YAAYZ,KAAKW,GACtBF,KAAKO,iBA/DjB,uCAoEqBC,GACbR,KAAKG,YAAcH,KAAKG,YAAYM,QAChC,SAAAP,GAAK,OAAIA,IAAUM,KAEvBR,KAAKO,gBAxEb,oCA4EQG,aAAaC,QACT,mCACAX,KAAKG,YAAYS,KAAI,SAAAV,GAAK,OAAIW,KAAKC,UAAUZ,MAAQa,gBA9EjE,gDACKC,KADL,wEAE8B,MAF9B,yCAIKA,KAJL,wEAK4B,MAL5B,mCAOKA,KAPL,yEAQ2B,QAR3B,0CAUKC,KAVL,2HAWmB,WAAOC,EAAeC,GAAtB,uBAAAC,EAAA,2DACPF,EAAMG,OAAOjB,QAAU,GADhB,uBAEP,EAAKH,cAAgB,GACrB,EAAKqB,MAAQ,KAHN,iCAOLC,EAAc,MAAQL,EACtBM,EAAa,MAAQL,EACR,cACE,mBAEfM,EAAQC,EAAQ,IAASC,QAZpB,mBAceF,EAAMG,IACxB,0BACIL,EACAC,EAFJ,+BAfG,WAqBuB,WAPxBK,EAdC,QAqBKC,KAAKC,SArBV,uBAsBGF,EAAQC,KAAKE,MAtBhB,QAwBD5C,EAAYyC,EAAQC,KAAKG,OAC/B,EAAKC,qBAAqB9C,GAzBnB,kDA2BPiB,QAAQiB,MAAM,gBACd,EAAKA,MAAL,KA5BO,0DAXnB,2GA2CKL,KA3CL,0HAyDKA,KAzDL,sHAmEKA,KAnEL,sFCDakB,EAAY,IAAIC,YAC7BD,EACKE,KAAiBrD,EAAMC,WACvBqD,GAAGrD,GACHsD,mB,YCTQC,EAAb,kCAAaA,EACFC,MAAgB,UADdD,EAEFE,KAAe,UAFbF,EAGFG,MAAgB,UAGpB,IAAMC,EAAb,kC,0QAAaA,EACFC,aAAuB,GADrBD,EAEFE,aAAuB,GCJlC,IAAMC,EAAkBC,IAAOC,IAAV,IAEPL,EAAWC,aAMQL,EAAOE,MAG3BQ,EAAS,kBAClB,gBAACH,EAAD,KACI,4C,8VCbR,I,UAAMI,EAAkBH,IAAOC,IAAV,IAIPL,EAAWE,aACDN,EAAOC,OAGzBL,EAAYY,IAAOC,IAAV,KAOFG,EAAS,kBAClB,gBAACD,EAAD,KACI,gBAACf,EAAD,KACI,qFACA,yCACkB,IACd,qBACIiB,KAAK,qDACL7D,MAAM,qBAFV,qBAKK,IAPT,OAQS,IACL,qBAAG6D,KAAK,4BAA4B7D,MAAM,YACrC,IADL,wB,qkBCtBhB,IAAM4C,GAAYY,IAAOC,IAAV,KAOTK,GAAaN,IAAOO,IAAV,KAOVC,GAAcR,IAAOS,MAAV,KAWJC,GADZC,aACD,kYAaQ,IAAMC,EAAmBC,IAAS7D,KAAK8D,QAAS,KAChD,OACI,gBAAC,GAAD,KACI,gBAACR,GAAD,CAAYS,IAAKC,MACjB,gBAACR,GAAD,CACIS,UAAU,SACVC,YAAY,qBACZC,KAAK,OACLC,SAAU,SAAAC,GAAK,OAAIT,EAAiBS,EAAMC,OAAOC,eArBrE,GAA+BC,aAA/B,uCACKxD,KADL,yEAEmCmB,EAAUP,IAAI5C,EAAMC,cAFvD,mCAIK+B,KAJL,wEAK4B,MAL5B,qCAOKC,KAPL,oFAQc,SAACC,GACP,EAAKuD,UAAUC,aAAaxD,EAAO,OAT3C,S,wJChCA,I,GAAMkB,GAAYY,IAAOC,IAAV,MACF,SAAA0B,GAAK,OAAIA,EAAMC,MAAQD,EAAMC,MAAQ,KACpC,SAAAD,GAAK,OAAIA,EAAME,OAASF,EAAME,OAAS,KAGxCC,GAAS,SAACH,GAAD,OAClB,gBAAC,GAAD,CAAWC,MAAOD,EAAMC,MAAOC,OAAQF,EAAME,QACxCF,EAAMI,W,yfCLf,I,kBAAMC,GAAiBhC,IAAOC,IAAV,KAWHT,EAAOG,OAIlBsC,GAASjC,IAAOC,IAAV,MAYCiC,GADZvB,YACD,0KAEQ,OACI,gBAACqB,GAAD,KACI,yCACA,4DACA,gBAACC,GAAD,CAAQE,QAASnF,KAAK2E,MAAMQ,SAA5B,cANhB,GAA2BX,eAA3B,G,8sDCfA,IAAMY,GAAMpC,IAAOC,IAAV,MAKHoC,GAAiBrC,IAAOC,IAAV,MAQdqC,GAAmBtC,IAAOC,IAAV,KAQDL,EAAWE,aAAe,IAGzCyC,GAAuBvC,IAAOC,IAAV,MASpBuC,GAAwBxC,IAAOC,IAAV,MAQrBpD,GAASmD,IAAOO,IAAV,MAMNkC,GAA4BzC,IAAOC,IAAV,MAKzByC,GAAiB1C,IAAOC,IAAV,MAEV,SAAA0B,GAAK,OAAKA,EAAMgB,aAAenD,EAAOE,KAAOF,EAAOC,SACjD,SAAAkC,GAAK,OAAKA,EAAMgB,aAAenD,EAAOE,KAAOF,EAAOC,SAW3DmD,GAAuB5C,IAAOC,IAAV,KAMLL,EAAWE,aAAe,IAIlC+C,GADZlC,aACD,0SAiBYmC,iBAAmB,SAACC,EAAoBJ,GACxCA,EACA,EAAKlB,UAAUuB,iBAAiBD,GACxB,EAAKtB,UAAUtE,YAAY8F,SAASF,KAC5C,EAAKtB,UAAUyB,cAAcH,GACzB,EAAKtB,UAAUtE,YAAYC,QAAU,GACrC,EAAK+F,gCAvBrB,gIAsCIC,oBAAsB,WAClB,OAAO,EAAK3B,UAAUxE,cAAcW,KAAI,SAAAV,GAAK,OACzC,EAAKmG,mBAAmBnG,GAAO,OAxC3C,EA4CYmG,mBAAqB,SAACnG,EAAeyF,GACzC,IAAIW,EAMJ,OAJIA,EADAX,EACa,SAEA,WAGb,gBAACH,GAAD,CAAuBe,IAAKrG,EAAMJ,IAC9B,gBAAC2F,GAAD,KACI,gBAAC5F,GAAD,CAAQkE,IAAK7D,EAAMN,aACnB,gBAAC,GAAD,CAAQgF,MAAO,KACf,2BACI,0BAAK1E,EAAMV,OACX,yBAAIU,EAAMR,gBAGlB,gBAACgG,GAAD,CACIP,QAAS,kBAAM,EAAKW,iBAAiB5F,EAAOyF,IAC5CA,aAAcA,GAEbW,KAjErB,EAuEIE,kBAAoB,WAChB,OAAO,EAAK/B,UAAUtE,YAAYS,KAAI,SAAAV,GAAK,OACvC,EAAKmG,mBAAmBnG,GAAO,OAzE3C,uDA8EQ,OACI,gBAAC,WAAD,KACKF,KAAKyG,UACF,gBAAC,GAAD,CAAOtB,QAASnF,KAAK0G,8BACrB,KACJ,gBAAC,EAAD,MACA,gBAACtB,GAAD,KACI,gBAACC,GAAD,KACI,gBAAC,GAAD,CAAQR,OAAQjC,EAAWC,eAC3B,gBAAC,GAAD,MACA,gBAAC,GAAD,CAAQgC,OAAQ,KAChB,gBAACS,GAAD,KACKtF,KAAK2G,qBACF3G,KAAKoG,sBAEL,gBAACb,GAAD,KACKvF,KAAKyE,UAAUnD,MAAQ,KACpB,uBACIyC,IAAK6C,KACLC,IAAI,qBACJjC,MAAO,MAGf,yBACK5E,KAAKyE,UAAUnD,MACVtB,KAAKyE,UAAUnD,MACf,0BAM1B,gBAAC+D,GAAD,KACI,gBAAC,GAAD,CAAQR,OAAQjC,EAAWC,eAC3B,gBAAC+C,GAAD,KACI,yCACC5F,KAAK8G,eACF9G,KAAKwG,oBAEL,gBAACjB,GAAD,KACI,uBACIxB,IAAKgD,KACLF,IAAI,0BACJjC,MAAO,MAEX,0CAMpB,gBAAC,EAAD,SAjIhB,2CASQ,OAAO5E,KAAKyE,UAAUxE,cAAcG,OAAS,IATrD,qCAcQ,OAAOJ,KAAKyE,UAAUtE,YAAYC,OAAS,MAdnD,GAA0BoE,aAA1B,yCACKxD,KADL,yEAEmCmB,EAAUP,IAAI5C,EAAMC,cAFvD,yCAIK+B,KAJL,yEAKiC,KALjC,iDAOKgG,KAPL,8HAYKA,KAZL,wIA4BK/F,KA5BL,oFA6BkC,WAC1B,EAAKwF,WAAY,MA9BzB,2DAiCKxF,KAjCL,oFAkCkC,WAC1B,EAAKwF,WAAY,MAnCzB,Y,+KCzFA,IAAMQ,GAAejE,IAAOC,IAAV,MAkBHiE,G,uKARP,OACI,gBAACD,GAAD,KACI,gBAAC,GAAD,W,GAJEzC,aCNlB2C,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,U,mBCV5BC,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.b98f8bd6.chunk.js","sourcesContent":["const TYPES = {\r\n    OMDbStore: Symbol(\"OMDbStore\")\r\n};\r\n\r\nexport default TYPES;\r\n","import { action, observable } from \"mobx\";\r\nimport { injectable } from \"inversify\";\r\nimport { IMovie, IOMDbMovie, IOMDbStore } from \"./Interfaces\";\r\nimport { API_KEY } from \"./APIKey\";\r\n\r\n@injectable()\r\nexport class OMDbStore implements IOMDbStore {\r\n    @observable\r\n    searchResults: IMovie[] = [];\r\n\r\n    @observable\r\n    nominations: IMovie[] = [];\r\n\r\n    @observable\r\n    error: string | null = null;\r\n\r\n    @action\r\n    searchMovies = async (query: String, page: number) => {\r\n        if (query.trim().length <= 0) {\r\n            this.searchResults = [];\r\n            this.error = null;\r\n            return;\r\n        }\r\n\r\n        const queryString = \"?s=\" + query;\r\n        const pageString = \"&p=\" + page;\r\n        const typeString = \"&type=movie\";\r\n        const apiKeyString = \"&apikey=\" + API_KEY;\r\n\r\n        const axios = require(\"axios\").default;\r\n        try {\r\n            const rawData = await axios.get(\r\n                \"http://www.omdbapi.com/\" +\r\n                    queryString +\r\n                    pageString +\r\n                    typeString +\r\n                    apiKeyString\r\n            );\r\n            if (rawData.data.Response === \"False\") {\r\n                throw rawData.data.Error;\r\n            }\r\n            const movieData = rawData.data.Search;\r\n            this.parseAndSetMovieData(movieData);\r\n        } catch (error) {\r\n            console.error(\"Error: \" + error);\r\n            this.error = error;\r\n        }\r\n    };\r\n\r\n    @action\r\n    private parseAndSetMovieData(movieData: IOMDbMovie[]) {\r\n        const results: IMovie[] = [];\r\n        for (const rawMovie of movieData) {\r\n            results.push({\r\n                title: rawMovie.Title,\r\n                release_year: rawMovie.Year,\r\n                poster_url: rawMovie.Poster,\r\n                id: rawMovie.imdbID\r\n            });\r\n        }\r\n        this.searchResults = results;\r\n    }\r\n\r\n    @action\r\n    addNomination(movie: IMovie) {\r\n        if (this.nominations.length >= 5) {\r\n            console.log(\"WOW!\");\r\n        } else {\r\n            this.nominations.push(movie);\r\n            this.updateCache();\r\n        }\r\n    }\r\n\r\n    @action\r\n    removeNomination(movieToRemove: IMovie) {\r\n        this.nominations = this.nominations.filter(\r\n            movie => movie !== movieToRemove\r\n        );\r\n        this.updateCache();\r\n    }\r\n\r\n    private updateCache() {\r\n        localStorage.setItem(\r\n            \"shopify_movie_nominations_cached\",\r\n            this.nominations.map(movie => JSON.stringify(movie)).toString()\r\n        );\r\n    }\r\n}\r\n","import { IOMDbStore } from \"./stores/Interfaces\";\r\nimport TYPES from \"./stores/Types\";\r\nimport { Container } from \"inversify\";\r\nimport { OMDbStore } from \"./stores/OMDbStore\";\r\n\r\nexport const container = new Container();\r\ncontainer\r\n    .bind<IOMDbStore>(TYPES.OMDbStore)\r\n    .to(OMDbStore)\r\n    .inSingletonScope();\r\n","export class Colors {\r\n    static green: string = \"#A1D683\";\r\n    static navy: string = \"#025157\";\r\n    static white: string = \"#ffffff\";\r\n}\r\n\r\nexport class Dimensions {\r\n    static headerHeight: number = 70;\r\n    static footerHeight: number = 50;\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors, Dimensions } from \"../stores/Constants\";\r\n\r\nconst HeaderContainer = styled.div`\r\n    width: 100vw;\r\n    height: ${Dimensions.headerHeight}px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    position: fixed;\r\n    padding-left: 32px;\r\n    border-bottom: 0.5px solid ${Colors.navy};\r\n`;\r\n\r\nexport const Header = () => (\r\n    <HeaderContainer>\r\n        <h1>The Shoppies</h1>\r\n    </HeaderContainer>\r\n);\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors, Dimensions } from \"../stores/Constants\";\r\n\r\nconst FooterContainer = styled.div`\r\n    position: fixed;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: ${Dimensions.footerHeight};\r\n    background-color: ${Colors.green};\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    padding: 0px 8px;\r\n`;\r\n\r\nexport const Footer = () => (\r\n    <FooterContainer>\r\n        <Container>\r\n            <p>Shopify W'21 Web Developer Intern Challenge by Amy Liang</p>\r\n            <p>\r\n                Icons made by{\" \"}\r\n                <a\r\n                    href=\"https://www.flaticon.com/authors/photo3idea-studio\"\r\n                    title=\"photo3idea_studio\"\r\n                >\r\n                    photo3idea_studio\r\n                </a>{\" \"}\r\n                from{\" \"}\r\n                <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                    {\" \"}\r\n                    www.flaticon.com\r\n                </a>\r\n            </p>\r\n        </Container>\r\n    </FooterContainer>\r\n);\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport search from \"../resources/search.svg\";\r\nimport { action, observable } from \"mobx\";\r\nimport { OMDbStore } from \"../stores/OMDbStore\";\r\nimport { container } from \"../inversify.config\";\r\nimport TYPES from \"../stores/Types\";\r\nimport { observer } from \"mobx-react\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    height: 30px;\r\n    margin-top: 32px;\r\n`;\r\n\r\nconst SearchIcon = styled.img`\r\n    position: absolute;\r\n    top: 9px;\r\n    left: 10px;\r\n    width: 17px;\r\n`;\r\n\r\nconst SearchField = styled.input`\r\n    padding: 0 32px;\r\n    width: 100%;\r\n    border-radius: 24px;\r\n    border-size: 0px;\r\n    border: 1px solid lightgray;\r\n    height: 35px;\r\n    font-family: Montserrat;\r\n`;\r\n\r\n@observer\r\nexport class SearchBar extends React.Component {\r\n    @observable\r\n    private omdbStore: OMDbStore = container.get(TYPES.OMDbStore);\r\n\r\n    @observable\r\n    private query: string = \"\";\r\n\r\n    @action\r\n    onInput = (query: string) => {\r\n        this.omdbStore.searchMovies(query, 1);\r\n    };\r\n\r\n    render() {\r\n        const debouncedOnInput = debounce(this.onInput, 500);\r\n        return (\r\n            <Container>\r\n                <SearchIcon src={search} />\r\n                <SearchField\r\n                    className=\"search\"\r\n                    placeholder=\"Search for a movie\"\r\n                    type=\"text\"\r\n                    onChange={event => debouncedOnInput(event.target.value)}\r\n                />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: ${props => props.width ? props.width : 0}px;\r\n    height: ${props => props.height ? props.height : 0}px;\r\n`\r\n\r\nexport const Spacer = (props) => (\r\n    <Container width={props.width} height={props.height}>\r\n        {props.children}\r\n    </Container>\r\n);\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../stores/Constants\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst ModalContainer = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    z-index: 100;\r\n    background-color: rgb(0 0 0 / 50%);\r\n    > * {\r\n        color: ${Colors.white};\r\n    }\r\n`;\r\n\r\nconst Button = styled.div`\r\n    cursor: pointer;\r\n    border: 1px solid white;\r\n    margin-top: 8px;\r\n    padding: 16px;\r\n`;\r\n\r\ninterface IProps {\r\n    onClick: () => void;\r\n}\r\n\r\n@observer\r\nexport class Modal extends React.Component<IProps> {\r\n    render() {\r\n        return (\r\n            <ModalContainer>\r\n                <h2>You did it!</h2>\r\n                <p>Successfully nominated 5 movies</p>\r\n                <Button onClick={this.props.onClick}>Close</Button>\r\n            </ModalContainer>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { action, computed, observable } from \"mobx\";\r\nimport { container } from \"../inversify.config\";\r\nimport TYPES from \"../stores/Types\";\r\nimport { OMDbStore } from \"../stores/OMDbStore\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Colors, Dimensions } from \"../stores/Constants\";\r\nimport { Header } from \"./Header\";\r\nimport { Footer } from \"./Footer\";\r\nimport { SearchBar } from \"./SearchBar\";\r\nimport cinema from \"../resources/cinema.png\";\r\nimport trophy from \"../resources/trophy.png\";\r\nimport { Spacer } from \"./Spacer\";\r\nimport { IMovie } from \"../stores/Interfaces\";\r\nimport { Modal } from \"./Modal\";\r\n\r\nconst Row = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    width: 50vw;\r\n    height: 100vh;\r\n    padding: 0px 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ResultsContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 16px;\r\n    margin-bottom: ${Dimensions.footerHeight + 12}px;\r\n`;\r\n\r\nconst PlaceholderContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst SearchResultContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin: 8px;\r\n`;\r\n\r\nconst Poster = styled.img`\r\n    width: 42px;\r\n    height: 60px;\r\n    object-fit: cover;\r\n`;\r\n\r\nconst SearchResultTextContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst NominateButton = styled.div`\r\n    border: 1px solid\r\n        ${props => (props.isNomination ? Colors.navy : Colors.green)};\r\n    color: ${props => (props.isNomination ? Colors.navy : Colors.green)};\r\n    margin-right: 16px;\r\n    height: 30px;\r\n    padding: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    cursor: pointer;\r\n    justify-content: center;\r\n`;\r\n\r\nconst NominationsContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    margin: 16px 0;\r\n    flex-direction: column;\r\n    margin-bottom: ${Dimensions.footerHeight + 12}px;\r\n`;\r\n\r\n@observer\r\nexport class Home extends React.Component {\r\n    @observable\r\n    private omdbStore: OMDbStore = container.get(TYPES.OMDbStore);\r\n\r\n    @observable\r\n    private showModal: boolean = false;\r\n\r\n    @computed\r\n    get showingSearchResults(): boolean {\r\n        return this.omdbStore.searchResults.length > 0;\r\n    }\r\n\r\n    @computed\r\n    get hasNominations(): boolean {\r\n        return this.omdbStore.nominations.length > 0;\r\n    }\r\n\r\n    private toggleNomination = (nomination: IMovie, isNomination: boolean) => {\r\n        if (isNomination) {\r\n            this.omdbStore.removeNomination(nomination);\r\n        } else if (!this.omdbStore.nominations.includes(nomination)) {\r\n            this.omdbStore.addNomination(nomination);\r\n            if (this.omdbStore.nominations.length >= 5) {\r\n                this.showNominationCompleteModal();\r\n            }\r\n        }\r\n    };\r\n\r\n    @action\r\n    showNominationCompleteModal = () => {\r\n        this.showModal = true;\r\n    };\r\n\r\n    @action\r\n    hideNominationCompleteModal = () => {\r\n        this.showModal = false;\r\n    };\r\n\r\n    renderSearchResults = () => {\r\n        return this.omdbStore.searchResults.map(movie =>\r\n            this.renderSearchResult(movie, false)\r\n        );\r\n    };\r\n\r\n    private renderSearchResult = (movie: IMovie, isNomination: boolean) => {\r\n        let buttonText;\r\n        if (isNomination) {\r\n            buttonText = \"Remove\";\r\n        } else {\r\n            buttonText = \"Nominate\";\r\n        }\r\n        return (\r\n            <SearchResultContainer key={movie.id}>\r\n                <SearchResultTextContainer>\r\n                    <Poster src={movie.poster_url} />\r\n                    <Spacer width={16} />\r\n                    <div>\r\n                        <h4>{movie.title}</h4>\r\n                        <p>{movie.release_year}</p>\r\n                    </div>\r\n                </SearchResultTextContainer>\r\n                <NominateButton\r\n                    onClick={() => this.toggleNomination(movie, isNomination)}\r\n                    isNomination={isNomination}\r\n                >\r\n                    {buttonText}\r\n                </NominateButton>\r\n            </SearchResultContainer>\r\n        );\r\n    };\r\n\r\n    renderNominations = () => {\r\n        return this.omdbStore.nominations.map(movie =>\r\n            this.renderSearchResult(movie, true)\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.showModal ? (\r\n                    <Modal onClick={this.hideNominationCompleteModal} />\r\n                ) : null}\r\n                <Header />\r\n                <Row>\r\n                    <InnerContainer>\r\n                        <Spacer height={Dimensions.headerHeight} />\r\n                        <SearchBar />\r\n                        <Spacer height={32} />\r\n                        <ResultsContainer>\r\n                            {this.showingSearchResults ? (\r\n                                this.renderSearchResults()\r\n                            ) : (\r\n                                <PlaceholderContainer>\r\n                                    {this.omdbStore.error ? null : (\r\n                                        <img\r\n                                            src={cinema}\r\n                                            alt=\"search placeholder\"\r\n                                            width={140}\r\n                                        />\r\n                                    )}\r\n                                    <p>\r\n                                        {this.omdbStore.error\r\n                                            ? this.omdbStore.error\r\n                                            : \"Search for a movie!\"}\r\n                                    </p>\r\n                                </PlaceholderContainer>\r\n                            )}\r\n                        </ResultsContainer>\r\n                    </InnerContainer>\r\n                    <InnerContainer>\r\n                        <Spacer height={Dimensions.headerHeight} />\r\n                        <NominationsContainer>\r\n                            <h2>Nominations</h2>\r\n                            {this.hasNominations ? (\r\n                                this.renderNominations()\r\n                            ) : (\r\n                                <PlaceholderContainer>\r\n                                    <img\r\n                                        src={trophy}\r\n                                        alt=\"nominations placeholder\"\r\n                                        width={140}\r\n                                    />\r\n                                    <p>None yet!</p>\r\n                                </PlaceholderContainer>\r\n                            )}\r\n                        </NominationsContainer>\r\n                    </InnerContainer>\r\n                </Row>\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport { Home } from \"./components/Home\";\nimport styled from \"styled-components\";\n\nconst AppContainer = styled.div`\n    width: 100vw;\n    height: 100vh;\n    padding: 0;\n    margin: 0;\n    font-family: Montserrat;\n`;\n\nclass App extends React.Component {\n    render() {\n        return (\n            <AppContainer>\n                <Home />\n            </AppContainer>\n        );\n    }\n}\n\nexport default App;\n","import \"reflect-metadata\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/search.070dbfaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/cinema.dc3d4eba.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy.593a2a6e.png\";"],"sourceRoot":""}