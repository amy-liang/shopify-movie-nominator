{"version":3,"sources":["stores/Types.ts","stores/OMDbStore.ts","inversify.config.ts","stores/Constants.ts","components/Header.tsx","components/Footer.tsx","components/SearchBar.tsx","components/Spacer.tsx","components/Modal.tsx","components/Home.tsx","App.tsx","index.tsx","resources/search.svg","resources/cinema.png","resources/trophy.png"],"names":["TYPES","OMDbStore","Symbol","injectable","movieData","results","rawMovie","push","title","Title","release_year","Year","poster_url","Poster","id","imdbID","this","searchResults","movie","nominations","length","updateCache","movieToRemove","filter","nominationsString","localStorage","getItem","movieEndIndex","indexOf","JSON","parse","substring","slice","setItem","map","stringify","toString","observable","action","query","page","a","trim","error","queryString","pageString","axios","require","default","get","rawData","data","Response","Error","Search","parseAndSetMovieData","container","Container","bind","to","inSingletonScope","Colors","green","navy","white","gray","Dimensions","headerHeight","footerHeight","HeaderContainer","styled","div","Header","FooterContainer","Footer","href","SearchIcon","img","SearchField","input","SearchBar","observer","debouncedOnInput","debounce","onInput","src","search","className","placeholder","type","onChange","event","target","value","React","omdbStore","searchMovies","props","width","height","Spacer","children","ModalContainer","Button","Modal","onClick","RowContainer","HalfContainer","InnerContainer","PlaceholderContainer","SearchResultContainer","SearchResultTextContainer","NominateButton","color","cursor","NominationsContainer","Home","toggleNomination","nomination","isNomination","removeNomination","includes","addNomination","showNominationCompleteModal","renderSearchResultsList","renderSearchResult","renderNominationsList","buttonText","key","renderSearchResultsContainer","showingSearchResults","cinema","alt","renderNominationsContainer","hasNominations","trophy","setNominationsFromCache","showModal","hideNominationCompleteModal","computed","AppContainer","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bdb30489.chunk.js","sourcesContent":["const TYPES = {\r\n    OMDbStore: Symbol(\"OMDbStore\")\r\n};\r\n\r\nexport default TYPES;\r\n","import { action, observable } from \"mobx\";\r\nimport { injectable } from \"inversify\";\r\nimport { IMovie, IOMDbMovie, IOMDbStore } from \"./Interfaces\";\r\nimport { API_KEY } from \"./APIKey\";\r\n\r\n@injectable()\r\nexport class OMDbStore implements IOMDbStore {\r\n    @observable\r\n    searchResults: IMovie[] = [];\r\n\r\n    @observable\r\n    nominations: IMovie[] = [];\r\n\r\n    @observable\r\n    error: string | null = null;\r\n\r\n    @action\r\n    searchMovies = async (query: String, page: number) => {\r\n        if (query.trim().length <= 0) {\r\n            this.searchResults = [];\r\n            this.error = null;\r\n            return;\r\n        }\r\n\r\n        const queryString = \"?s=\" + query;\r\n        const pageString = \"&p=\" + page;\r\n        const typeString = \"&type=movie\";\r\n        const apiKeyString = \"&apikey=\" + API_KEY;\r\n\r\n        const axios = require(\"axios\").default;\r\n        try {\r\n            const rawData = await axios.get(\r\n                \"https://www.omdbapi.com/\" +\r\n                    queryString +\r\n                    pageString +\r\n                    typeString +\r\n                    apiKeyString\r\n            );\r\n            if (rawData.data.Response === \"False\") {\r\n                throw rawData.data.Error;\r\n            }\r\n            const movieData = rawData.data.Search;\r\n            this.parseAndSetMovieData(movieData);\r\n        } catch (error) {\r\n            this.error = error;\r\n        }\r\n    };\r\n\r\n    @action\r\n    private parseAndSetMovieData(movieData: IOMDbMovie[]) {\r\n        const results: IMovie[] = [];\r\n        for (const rawMovie of movieData) {\r\n            results.push({\r\n                title: rawMovie.Title,\r\n                release_year: rawMovie.Year,\r\n                poster_url: rawMovie.Poster,\r\n                id: rawMovie.imdbID\r\n            });\r\n        }\r\n        this.searchResults = results;\r\n    }\r\n\r\n    @action\r\n    addNomination(movie: IMovie) {\r\n        if (this.nominations.length < 5) {\r\n            this.nominations.push(movie);\r\n            this.updateCache();\r\n        }\r\n    }\r\n\r\n    @action\r\n    removeNomination(movieToRemove: IMovie) {\r\n        this.nominations = this.nominations.filter(\r\n            movie => movie !== movieToRemove\r\n        );\r\n        this.updateCache();\r\n    }\r\n\r\n    @action\r\n    setNominationsFromCache() {\r\n        let nominationsString = localStorage.getItem(\r\n            \"shopify_movie_nominations_cached\"\r\n        );\r\n        if (nominationsString == null) return;\r\n\r\n        // Parse nominations list\r\n        let movieEndIndex = nominationsString.indexOf(\"}\");\r\n        while (movieEndIndex > -1) {\r\n            const movie = JSON.parse(\r\n                nominationsString.substring(0, movieEndIndex + 1)\r\n            );\r\n            this.nominations.push(movie);\r\n            nominationsString = nominationsString.slice(movieEndIndex + 2);\r\n            movieEndIndex = nominationsString.indexOf(\"}\");\r\n        }\r\n    }\r\n\r\n    private updateCache() {\r\n        localStorage.setItem(\r\n            \"shopify_movie_nominations_cached\",\r\n            this.nominations.map(movie => JSON.stringify(movie)).toString()\r\n        );\r\n    }\r\n}\r\n","import { IOMDbStore } from \"./stores/Interfaces\";\r\nimport TYPES from \"./stores/Types\";\r\nimport { Container } from \"inversify\";\r\nimport { OMDbStore } from \"./stores/OMDbStore\";\r\n\r\nexport const container = new Container();\r\ncontainer\r\n    .bind<IOMDbStore>(TYPES.OMDbStore)\r\n    .to(OMDbStore)\r\n    .inSingletonScope();\r\n","export class Colors {\r\n    static green: string = \"#A1D683\";\r\n    static navy: string = \"#025157\";\r\n    static white: string = \"#ffffff\";\r\n    static gray: string = \"#898989\";\r\n}\r\n\r\nexport class Dimensions {\r\n    static headerHeight: number = 70;\r\n    static footerHeight: number = 50;\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors, Dimensions } from \"../stores/Constants\";\r\n\r\nconst HeaderContainer = styled.div`\r\n    width: 100vw;\r\n    height: ${Dimensions.headerHeight}px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    position: fixed;\r\n    padding-left: 32px;\r\n    border-bottom: 0.5px solid ${Colors.navy};\r\n`;\r\n\r\nexport const Header = () => (\r\n    <HeaderContainer>\r\n        <h1>The Shoppies</h1>\r\n    </HeaderContainer>\r\n);\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors, Dimensions } from \"../stores/Constants\";\r\n\r\nconst FooterContainer = styled.div`\r\n    position: fixed;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: ${Dimensions.footerHeight};\r\n    background-color: ${Colors.green};\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    padding: 0px 8px;\r\n`;\r\n\r\nexport const Footer = () => (\r\n    <FooterContainer>\r\n        <Container>\r\n            <p>Shopify W'21 Web Developer Intern Challenge by Amy Liang</p>\r\n            <p>\r\n                Icons made by{\" \"}\r\n                <a\r\n                    href=\"https://www.flaticon.com/authors/photo3idea-studio\"\r\n                    title=\"photo3idea_studio\"\r\n                >\r\n                    photo3idea_studio\r\n                </a>{\" \"}\r\n                from{\" \"}\r\n                <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                    {\" \"}\r\n                    www.flaticon.com\r\n                </a>\r\n            </p>\r\n        </Container>\r\n    </FooterContainer>\r\n);\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport search from \"../resources/search.svg\";\r\nimport { action, observable } from \"mobx\";\r\nimport { OMDbStore } from \"../stores/OMDbStore\";\r\nimport { container } from \"../inversify.config\";\r\nimport TYPES from \"../stores/Types\";\r\nimport { observer } from \"mobx-react\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    height: 30px;\r\n    margin-top: 32px;\r\n`;\r\n\r\nconst SearchIcon = styled.img`\r\n    position: absolute;\r\n    top: 9px;\r\n    left: 10px;\r\n    width: 17px;\r\n`;\r\n\r\nconst SearchField = styled.input`\r\n    padding: 0 32px;\r\n    width: 100%;\r\n    border-radius: 24px;\r\n    border-size: 0px;\r\n    border: 1px solid lightgray;\r\n    height: 35px;\r\n    font-family: Montserrat;\r\n`;\r\n\r\n@observer\r\nexport class SearchBar extends React.Component {\r\n    @observable\r\n    private omdbStore: OMDbStore = container.get(TYPES.OMDbStore);\r\n\r\n    @observable\r\n    private query: string = \"\";\r\n\r\n    @action\r\n    onInput = (query: string) => {\r\n        // Currently only returns first page of results\r\n        this.omdbStore.searchMovies(query, 1);\r\n    };\r\n\r\n    render() {\r\n        const debouncedOnInput = debounce(this.onInput, 500);\r\n        return (\r\n            <Container>\r\n                <SearchIcon src={search} />\r\n                <SearchField\r\n                    className=\"search\"\r\n                    placeholder=\"Search for a movie\"\r\n                    type=\"text\"\r\n                    onChange={event => debouncedOnInput(event.target.value)}\r\n                />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: ${props => props.width ? props.width : 0}px;\r\n    height: ${props => props.height ? props.height : 0}px;\r\n`\r\n\r\nexport const Spacer = (props) => (\r\n    <Container width={props.width} height={props.height}>\r\n        {props.children}\r\n    </Container>\r\n);\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../stores/Constants\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst ModalContainer = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    z-index: 100;\r\n    background-color: rgb(0 0 0 / 50%);\r\n    > * {\r\n        color: ${Colors.white};\r\n    }\r\n`;\r\n\r\nconst Button = styled.div`\r\n    cursor: pointer;\r\n    border: 1px solid white;\r\n    margin-top: 8px;\r\n    padding: 16px;\r\n`;\r\n\r\ninterface IProps {\r\n    onClick: () => void;\r\n}\r\n\r\n@observer\r\nexport class Modal extends React.Component<IProps> {\r\n    render() {\r\n        return (\r\n            <ModalContainer>\r\n                <h2>You did it!</h2>\r\n                <p>Successfully nominated 5 movies</p>\r\n                <Button onClick={this.props.onClick}>Close</Button>\r\n            </ModalContainer>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { action, computed, observable } from \"mobx\";\r\nimport { container } from \"../inversify.config\";\r\nimport TYPES from \"../stores/Types\";\r\nimport { OMDbStore } from \"../stores/OMDbStore\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Colors, Dimensions } from \"../stores/Constants\";\r\nimport { Header } from \"./Header\";\r\nimport { Footer } from \"./Footer\";\r\nimport { SearchBar } from \"./SearchBar\";\r\nimport cinema from \"../resources/cinema.png\";\r\nimport trophy from \"../resources/trophy.png\";\r\nimport { Spacer } from \"./Spacer\";\r\nimport { IMovie } from \"../stores/Interfaces\";\r\nimport { Modal } from \"./Modal\";\r\n\r\nconst RowContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst HalfContainer = styled.div`\r\n    width: 50vw;\r\n    height: 100vh;\r\n    padding: 0px 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 16px;\r\n    margin-bottom: ${Dimensions.footerHeight + 12}px;\r\n`;\r\n\r\nconst PlaceholderContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst SearchResultContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin: 8px;\r\n`;\r\n\r\nconst Poster = styled.img`\r\n    width: 42px;\r\n    height: 60px;\r\n    object-fit: cover;\r\n`;\r\n\r\nconst SearchResultTextContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst NominateButton = styled.div`\r\n    border: 1px solid ${props => props.color};\r\n    color: ${props => props.color};\r\n    margin-right: 16px;\r\n    width: 94px;\r\n    height: 30px;\r\n    padding: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    cursor: ${props => props.cursor};\r\n    justify-content: center;\r\n`;\r\n\r\nconst NominationsContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    margin: 16px 0;\r\n    flex-direction: column;\r\n    margin-bottom: ${Dimensions.footerHeight + 12}px;\r\n`;\r\n\r\n@observer\r\nexport class Home extends React.Component {\r\n    @observable\r\n    private omdbStore: OMDbStore = container.get(TYPES.OMDbStore);\r\n\r\n    @observable\r\n    private showModal: boolean = false;\r\n\r\n    @computed\r\n    get showingSearchResults(): boolean {\r\n        return this.omdbStore.searchResults.length > 0;\r\n    }\r\n\r\n    @computed\r\n    get hasNominations(): boolean {\r\n        return this.omdbStore.nominations.length > 0;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.omdbStore.setNominationsFromCache();\r\n    }\r\n\r\n    private toggleNomination = (nomination: IMovie, isNomination: boolean) => {\r\n        if (isNomination) {\r\n            this.omdbStore.removeNomination(nomination);\r\n        } else if (!this.omdbStore.nominations.includes(nomination)) {\r\n            this.omdbStore.addNomination(nomination);\r\n            if (this.omdbStore.nominations.length >= 5) {\r\n                this.showNominationCompleteModal();\r\n            }\r\n        }\r\n    };\r\n\r\n    @action\r\n    private showNominationCompleteModal = () => {\r\n        this.showModal = true;\r\n    };\r\n\r\n    @action\r\n    private hideNominationCompleteModal = () => {\r\n        this.showModal = false;\r\n    };\r\n\r\n    private renderSearchResultsList = () => {\r\n        return this.omdbStore.searchResults.map(movie =>\r\n            this.renderSearchResult(movie, false)\r\n        );\r\n    };\r\n\r\n    private renderNominationsList = () => {\r\n        return this.omdbStore.nominations.map(movie =>\r\n            this.renderSearchResult(movie, true)\r\n        );\r\n    };\r\n\r\n    private renderSearchResult = (movie: IMovie, isNomination: boolean) => {\r\n        let buttonText;\r\n        let color = Colors.green;\r\n        let cursor = \"pointer\";\r\n        if (isNomination) {\r\n            buttonText = \"Remove\";\r\n            color = Colors.navy;\r\n        } else {\r\n            buttonText = \"Nominate\";\r\n            if (this.omdbStore.nominations.includes(movie)) {\r\n                color = Colors.gray;\r\n                cursor = \"default\";\r\n                buttonText = \"Nominated!\";\r\n            }\r\n        }\r\n        return (\r\n            <SearchResultContainer key={movie.id}>\r\n                <SearchResultTextContainer>\r\n                    <Poster src={movie.poster_url} />\r\n                    <Spacer width={16} />\r\n                    <div>\r\n                        <h4>{movie.title}</h4>\r\n                        <p>{movie.release_year}</p>\r\n                    </div>\r\n                </SearchResultTextContainer>\r\n                <NominateButton\r\n                    onClick={() => this.toggleNomination(movie, isNomination)}\r\n                    color={color}\r\n                    cursor={cursor}\r\n                >\r\n                    {buttonText}\r\n                </NominateButton>\r\n            </SearchResultContainer>\r\n        );\r\n    };\r\n\r\n    renderSearchResultsContainer = () => {\r\n        return (\r\n            <HalfContainer>\r\n                <Spacer height={Dimensions.headerHeight} />\r\n                <SearchBar />\r\n                <Spacer height={32} />\r\n                <InnerContainer>\r\n                    {this.showingSearchResults ? (\r\n                        this.renderSearchResultsList()\r\n                    ) : (\r\n                        <PlaceholderContainer>\r\n                            {this.omdbStore.error ? null : (\r\n                                <img\r\n                                    src={cinema}\r\n                                    alt=\"search placeholder\"\r\n                                    width={140}\r\n                                />\r\n                            )}\r\n                            <p>\r\n                                {this.omdbStore.error\r\n                                    ? this.omdbStore.error\r\n                                    : \"Search for a movie!\"}\r\n                            </p>\r\n                        </PlaceholderContainer>\r\n                    )}\r\n                </InnerContainer>\r\n            </HalfContainer>\r\n        );\r\n    };\r\n\r\n    renderNominationsContainer = () => {\r\n        return (\r\n            <HalfContainer>\r\n                <Spacer height={Dimensions.headerHeight} />\r\n                <NominationsContainer>\r\n                    <h2>Nominations</h2>\r\n                    {this.hasNominations ? (\r\n                        this.renderNominationsList()\r\n                    ) : (\r\n                        <PlaceholderContainer>\r\n                            <img\r\n                                src={trophy}\r\n                                alt=\"nominations placeholder\"\r\n                                width={140}\r\n                            />\r\n                            <p>None yet!</p>\r\n                        </PlaceholderContainer>\r\n                    )}\r\n                </NominationsContainer>\r\n            </HalfContainer>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.showModal ? (\r\n                    <Modal onClick={this.hideNominationCompleteModal} />\r\n                ) : null}\r\n                <Header />\r\n                <RowContainer>\r\n                    {this.renderSearchResultsContainer()}\r\n                    {this.renderNominationsContainer()}\r\n                </RowContainer>\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport { Home } from \"./components/Home\";\nimport styled from \"styled-components\";\n\nconst AppContainer = styled.div`\n    width: 100vw;\n    height: 100vh;\n    padding: 0;\n    margin: 0;\n    font-family: Montserrat;\n`;\n\nclass App extends React.Component {\n    render() {\n        return (\n            <AppContainer>\n                <Home />\n            </AppContainer>\n        );\n    }\n}\n\nexport default App;\n","import \"reflect-metadata\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/search.070dbfaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/cinema.dc3d4eba.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy.593a2a6e.png\";"],"sourceRoot":""}